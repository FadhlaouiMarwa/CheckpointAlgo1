//Première Méthode
ALGORITHM somme-nb-different1
VAR
    tab1 : ARRAY_OF INTEGER;
    tab2 : ARRAY_OF INTEGER;
    i:INTEGER
    j:INTEGER
    k:INTEGER
    l:INTEGER
    somme:INTEGER:=0
    compteur:INTEGER

BEGIN
    FOR i FROM 0 TO lenght(tab1)-1 STEP step  DO
        Read (tab1[i])
    END_FOR
    FOR j FROM 0 TO lenght(tab2)-1 STEP step  DO
        Read (tab2[j])
    END_FOR

    FOR k FROM 0 TO lenght(tab1)-1 STEP 1  DO
    compteur:=0
        FOR l FROM 0 TO lenght(tab2)-1 STEP 1  DO
            IF (tab1[k]<> tab2[l]) THEN
                compteur:=compteur+1
            END_IF
        END_FOR
            IF (compteur=lenght(tab2)) THEN
            somme:=somme+tab1[k]
            END_IF
    END_FOR
    
    FOR l FROM 0 TO lenght(tab2)-1 STEP 1  DO
    compteur:=0
        FOR k FROM 0 TO lenght(tab1)-1 STEP 1  DO
            IF (tab1[k]<> tab2[l]) THEN
                compteur:=compteur+1
            END_IF
        END_FOR
            IF (compteur=lenght(tab1)) THEN
            somme:=somme+tab2[l]
            END_IF
    END_FOR

END

//Deuxième Méthode
ALGORITHM somme-nb-different2
VAR
    tab1 : ARRAY_OF INTEGER;
    tab2 : ARRAY_OF INTEGER;
    Htab: HASH_TABLE<INTEGER,INTEGER>
    i:INTEGER
    j:INTEGER
    k:INTEGER
    l:INTEGER
    array-value : ARRAY_OF INTEGER;
    array-key : ARRAY_OF INTEGER;
    somme: INTEGER :=0
    m:INTEGER

BEGIN

    FOR i FROM 0 TO lenght(tab1)-1 STEP step  DO
        Read (tab1[i])
    END_FOR
    FOR j FROM 0 TO lenght(tab2)-1 STEP step  DO
        Read (tab2[j])
    END_FOR

    FOR k FROM 0 TO lenght(tab1)-1 STEP 1  DO
        Htab.insert(tab1[k],1)
    END_FOR
    FOR l FROM 0 TO lenght(tab2)-1 STEP 1  DO
        IF (Htab.lookup(tab2[l])=true) THEN
        Htab.insert(tab2[l],2)
        ELSE 
        Htab.insert(tab2[l],1)
        END_IF
    END_FOR
    array-value:=Htab.getvalues
    array-key:=Htab.getkeys
    FOR m FROM 0 TO lenght(array-value)-1 STEP 1  DO
    IF (array-value[m]=1) THEN
        Somme:=somme+array-key[m]
    END_IF
    END_FOR
  
END